import React from 'react';
import { PrivyProvider, usePrivy } from '@privy-io/react-auth';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
import { seismicConfig } from '../seismic-config.js';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function AppContent() {
    const { ready, authenticated, user, login, logout } = usePrivy();

    if (!ready) {
        return (
            <div className="loading-container">
                <div className="loading-spinner"></div>
                <p>–ó–∞–≥—Ä—É–∑–∫–∞ Privy SDK...</p>
            </div>
        );
    }

    return (
        <div className="app-container">
            <header className="app-header">
                <h1>üåä Seismic Game</h1>
                <p>–ë–ª–æ–∫—á–µ–π–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å Privy –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π</p>
            </header>

            <main className="app-main">
                {!authenticated ? (
                    <div className="auth-section">
                        <h2>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é</h2>
                        <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ—à–µ–ª–µ–∫ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É</p>
                        <button 
                            className="connect-button"
                            onClick={login}
                        >
                            üîê –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫
                        </button>
                    </div>
                ) : (
                    <div className="user-section">
                        <div className="user-info">
                            <h2>‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω!</h2>
                            <div className="user-details">
                                <p><strong>ID:</strong> {user?.id}</p>
                                {user?.wallet?.address && (
                                    <p><strong>–ö–æ—à–µ–ª–µ–∫:</strong> {user.wallet.address}</p>
                                )}
                                {user?.email?.address && (
                                    <p><strong>Email:</strong> {user.email.address}</p>
                                )}
                                <p><strong>–°–æ–∑–¥–∞–Ω:</strong> {user?.createdAt ? new Date(user.createdAt).toLocaleString('ru-RU') : 'N/A'}</p>
                            </div>
                        </div>

                        <div className="actions">
                            <button 
                                className="action-button game-button"
                                onClick={() => {
                                    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∏–≥—Ä—ã
                                    alert('–ò–≥—Ä–∞ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!');
                                }}
                            >
                                üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
                            </button>
                            
                            <button 
                                className="action-button wallet-button"
                                onClick={() => {
                                    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—à–µ–ª—å–∫–µ
                                    console.log('User wallets:', user?.linkedAccounts);
                                }}
                            >
                                üëõ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–æ–º
                            </button>
                            
                            <button 
                                className="action-button logout-button"
                                onClick={logout}
                            >
                                üö™ –í—ã–π—Ç–∏
                            </button>
                        </div>

                        <div className="network-info">
                            <h3>üåê –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–∏</h3>
                            <div className="network-details">
                                <p><strong>–°–µ—Ç—å:</strong> {seismicConfig.network.name}</p>
                                <p><strong>Chain ID:</strong> {seismicConfig.network.chainId}</p>
                                <p><strong>RPC:</strong> {seismicConfig.network.rpcUrl}</p>
                                <p><strong>Explorer:</strong> <a href={seismicConfig.network.explorer} target="_blank" rel="noopener noreferrer">–û—Ç–∫—Ä—ã—Ç—å explorer</a></p>
                            </div>
                        </div>
                    </div>
                )}
            </main>

            <footer className="app-footer">
                <p>&copy; 2024 Seismic Game. Powered by Privy</p>
            </footer>
        </div>
    );
}

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å Privy Provider
function App() {
    return (
        <PrivyProvider 
            appId={seismicConfig.privy.appId}
            config={seismicConfig.privy.config}
        >
            <AppContent />
        </PrivyProvider>
    );
}

export default App; 